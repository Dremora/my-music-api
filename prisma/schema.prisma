generator client {
  provider = "prisma-client-js"
}

generator nexusPrisma {
  provider = "nexus-prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Album {
  id                   String    @id @default(uuid()) @db.Uuid
  artist               String    @db.VarChar(255)
  comments             String?   @db.VarChar(255)
  firstPlayedTimestamp DateTime? @map("first_played_timestamp") @db.Timestamp(6)
  firstPlayedDate      Int[]     @map("first_played_date")
  title                String    @db.VarChar(255)
  year                 Int?
  createdAt            DateTime  @default(now()) @map("inserted_at") @db.Timestamp(6)
  updatedAt            DateTime  @updatedAt @map("updated_at") @db.Timestamp(6)
  sources              Source[]

  @@map("albums")
}

model Source {
  id          BigInt   @id @default(autoincrement())
  accurateRip String?  @map("accurate_rip") @db.VarChar(255)
  comments    String?  @db.VarChar(255)
  cueIssues   String?  @map("cue_issues") @db.VarChar(255)
  discs       Int?
  download    String?  @db.VarChar(1000)
  edition     String?  @db.VarChar(255)
  format      Format?
  location    Location
  mbid        String?  @db.Uuid
  tagIssues   String?  @map("tag_issues") @db.VarChar(255)
  albumId     String   @map("album_id") @db.Uuid
  createdAt   DateTime @default(now()) @map("inserted_at") @db.Timestamp(6)
  updatedAt   DateTime @updatedAt @map("updated_at") @db.Timestamp(6)
  album       Album    @relation(fields: [albumId], references: [id], onDelete: Cascade)

  @@index([albumId], map: "album_sources_album_id_index")
  @@map("album_sources")
}

model SchemaMigration {
  version     BigInt    @id
  inserted_at DateTime? @db.Timestamp(6)

  @@map("schema_migrations")
}

enum Location {
  APPLE_MUSIC   @map("apple-music")
  FOOBAR2000    @map("foobar2000")
  GOOGLE_MUSIC  @map("google-music")
  SPOTIFY       @map("spotify")

  @@map("location")
}

enum Format {
  TAK
  APE
  MP3
  FLAC
  WMA
  MIXED
  MPC

  @@map("format")
}
